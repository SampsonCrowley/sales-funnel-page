#!/usr/bin/env node

const FS = require("fs")
const PATH = require("path")

const rootPath = PATH.join(__dirname, "../")
const buildPath = PATH.join(rootPath, "build")
const gtmPath = PATH.join(buildPath, "gtm.js")
const autopilotPath = PATH.join(buildPath, "autopilot.js")

let gtmString = ""
let autopilotString = ""

async function getGTMCode() {
  let filehandle
  if(gtmString) return gtmString

  try {
    filehandle = await FS.promises.open(gtmPath, "r")
    const code = await filehandle.readFile("utf8")
    gtmString = `<!-- Google Tag Manager --><script>${code}</script><!-- End Google Tag Manager -->`
  } finally {
    if(filehandle) await filehandle.close()
  }

  return gtmString
}


async function getAutopilotCode() {
  let filehandle
  if(autopilotString) return autopilotString

  try {
    filehandle = await FS.promises.open(autopilotPath, "r")
    const code = await filehandle.readFile("utf8")
    autopilotString = `<!-- Autopilot Anywhere --><script>${code}</script><!-- End Autopilot Anywhere -->`
  } finally {
    if(filehandle) await filehandle.close()
  }

  return autopilotString
}

async function insertTrackingCode(filePath) {
  let filehandle
  try {
    const gtmCode = await getGTMCode()
    const autopilotCode = await getAutopilotCode()

    try {
      filehandle = await FS.promises.open(filePath, "r+")
    } catch(err) {
      filehandle = await FS.promises.open(filePath, "w+")
    }

    const fileData = await filehandle.readFile("utf8")

    const inserted = fileData.replace(/\<script\s+id\="google-tag-manager"\>\<\/script\>/, gtmCode)
                             .replace(/\<script\s+id\="autopilot-anywhere"\>\<\/script\>/, autopilotCode)

    const { bytesWritten } = await filehandle.write(inserted, 0, "utf8")

    await filehandle.truncate(bytesWritten)
  } finally {
    if(filehandle) await filehandle.close()
  }
}

FS.readdirSync(buildPath)
  .forEach(file => file.endsWith(".html") && insertTrackingCode(PATH.join(buildPath, file)))
